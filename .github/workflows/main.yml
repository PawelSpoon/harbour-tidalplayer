name: Github CI build

on:
  push:
    tags:
      - '0.2.*'
  pull_request:
    branches:
      - main
      - master
env:
  RELEASE: 5.0.0.43

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false

    - name: Initialize submodules  
      run: |
        git submodule update --init --recursive external/mpegdash external/ratelimit || echo "Some submodules failed (expected for mixed dependency approach)"

    - name: Prepare
      run: mkdir output

    - name: Build noarch
      id: build_noarch
      uses: coderus/github-sfos-build@sfos5
      with:
        release: ${{ env.RELEASE }}
        arch: noarch
    
    - name: Debug build output
      run: |
        echo "=== Build output noarch ==="
        find . -name "*.rpm" -ls || echo "No RPM files found"
        ls -la RPMS/ || echo "RPMS directory not found"

    - name: Collect RPM files
      run: |
        echo "=== Collecting RPM files ==="
        mkdir -p RPMS
        find . -name "*.rpm" -exec cp {} RPMS/ \;
        echo "=== Final RPMS directory ==="
        ls -la RPMS/ || echo "No files in RPMS directory"
        echo "=== RPM file details ==="
        file RPMS/*.rpm || echo "No RPM files to analyze"

    - name: Extract Version Name
      id: extract_name
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          return context.payload.ref.replace(/refs\/tags\//, '');

    - name: Upload RPM artifacts for PR builds
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: rpm-packages
        path: RPMS/*.rpm
        retention-days: 30

    - name: Create a Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.extract_name.outputs.result }}
        draft: false
        prerelease: false
        body: This release was autogenerated.
        files: 'RPMS/*.rpm'

    - name: Update Latest Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest
        name: Latest Build
        draft: false
        prerelease: false
        body: |
          This is the latest stable release. 
          It gets updated automatically with every new tagged release.
          Latest version: ${{ steps.extract_name.outputs.result }}
        files: 'RPMS/*.rpm'
